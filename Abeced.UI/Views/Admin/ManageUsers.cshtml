@model IEnumerable<Abeced.UI.Models.PersonModel>

@{
    ViewBag.Title = "Manage Users";
    //Layout = "~/Views/Shared/_adminLayout.cshtml";
    Layout = "~/Views/Shared/_adminLayoutProfile.cshtml";
}
<style type="text/css">
        
    span.k-Delete {
			background:url('@Url.Content("~/Content/icons/delete.png")') center center;
		}
		.k-grid .k-button-icontext .k-icon {
			margin: 0;
			vertical-align: middle;
		}
		.k-grid tbody .k-button {
			min-width: 16px;
			/*width: 16px*/;
		}

    /*Style build-in commands*/
    .abutton,
    div.k-grid .k-grid-delete,
    div.k-grid .k-grid-cancel,
    div.k-grid .k-grid-update  {
        display:inline-block;
        width:16px;
        height:16px;
        text-align:center;
        text-indent:-444px;
        min-width:0;
        border:0;
    }

    /*Style custom buttons*/
    .abutton.delete {
        background: url('@Url.Content("~/Content/icons/delete.png")');
    }
     table {
    border-collapse:separate;
    border-spacing: 2px;
}
    td, th {
    padding: 2px;
}
    .k-block > .k-header, .k-window-titlebar {
    height: 2.1em;
    }
</style>
@section astats
{
<div class="row">
	<div class="col-sm-3">
	
		<div class="tile-stats tile-red">
			<div class="icon"><i class="entypo-users"></i></div>
			<div class="num" data-start="0" data-end="@Membership.GetAllUsers().Count" data-postfix="" data-duration="1500" data-delay="0">0</div>
			
			<h3>Registered users</h3>
			<p>so far on ABECED website.</p>
		</div>
		
	</div>
	
	<div class="col-sm-3">
	
		<div class="tile-stats tile-green">
			<div class="icon"><i class="entypo-chart-bar"></i></div>
			<div class="num" data-start="0" data-end="1" data-postfix="" data-duration="1500" data-delay="600">0</div>
			
			<h3>Daily Visitors</h3>
			<p>this is the current online users.</p>
		</div>
		
	</div>
	
	<div class="col-sm-3">
	
		<div class="tile-stats tile-aqua">
			<div class="icon"><i class="entypo-docs"></i></div>
			<div class="num" data-start="0" data-end="@ViewBag.AllCards" data-postfix="" data-duration="1500" data-delay="1200">0</div>
			
			<h3>Total Flash Cards</h3>
			<p>contributed as at now.</p>
		</div>
		
	</div>
	
	<div class="col-sm-3">
	
		<div class="tile-stats tile-blue">
			<div class="icon"><i class="entypo-rss"></i></div>
			<div class="num" data-start="0" data-end="@ViewBag.CardsPendingApprove" data-postfix="" data-duration="1500" data-delay="1800">0</div>
			
			<h3>Flashcards Pending Approvals</h3>
			<p>on our site right now.</p>
		</div>
		
	</div>
</div>
 
}

@using Kendo.Mvc.UI
@{int[] pages = { 50, 100, 200};}

<div style="margin-left: 0px">

<div align="center" style="font-size:160%; color: #767d81;  font-family: 
    Trebuchet MS,Verdana,Helvetica,Arial,sans-serif;margin-bottom:0px;padding-bottom:0px" >
         
       Flash Cards
       @* <hr style=" border-color:#a1a3a4; width: 85%;margin-left: 5%;margin-right: 10%;margin-bottom:0px;padding-bottom:0px" />
*@
        </div>
    <table align="center" style="width:100%">
        <tr>
            <td>
            
                
                <button type="button" class="k-button" id="btnSendInvite" style="font-weight: bold; font-size: 12px">
                    
                   Send An Invite </button>  
    @(Html.Kendo().Grid(Model)
    .Name("SysUsers")
    .HtmlAttributes(new { style="width:100%"})
    .Columns(columns =>
    {
        columns.Bound(p => p.UserName).Visible(false);
        columns.Bound(p => p.FirstName);
        columns.Bound(p => p.LastName);
        columns.Bound(p => p.LastLoginDate).ClientTemplate("#= kendo.toString(LastLoginDate, \"dd MMMM  yyyy HH:mm:ss\") #");
        columns.Bound(p => p.SignUpDate).Format("{0:dd MMMM yyyy HH:mm:ss}");
        //columns.Bound(p => p.Approved).ClientTemplate("<input type='checkbox' #= Approved ? checked='checked': '' # class='chkbx' />");
        //columns.Command(command => command.Custom("Edit").Click("getFlashCard"))
        //    .HtmlAttributes(new { @style = "text-align: left; font-size:12px" }).Width(80);
        //columns.Command(command => command.Custom("Delete").Click("deleteCard"))
         //                                        .HtmlAttributes(new { @style = "text-align: left; font-size:11px", @title = "Delete" }).Width(50);



    })
           
            .Events(events => events.DataBound("onDataBound"))
        .Pageable(pager => pager
                .PageSizes(pages))
                .Sortable()
            //.Scrollable(scrolling => scrolling.Height(540))
        .Filterable()
            .DataSource(dataSource => dataSource
            .Ajax()
                     .Read(read => read.Action("GetUsers_Read", "Admin"))

            .ServerOperation(false)
            .PageSize(50)

        )
    )
            </td>
        </tr>
    </table>
</div>
<div id="getmsgwindow">
</div>
<div id="windowmsg"></div>


<script type="text/javascript">


    function onDataBound(e) {
        //remove text from "destroy" button
        //var innerContent = $(".k-grid-Delete").html().replace("Delete", "");
        //$(".k-grid-Delete").html(innerContent);
        $(".k-grid-Delete").addClass("abutton delete");
    }

    //Delete Card
    function deleteCard(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var CardId = dataItem.CardId;
        var answer = confirm("Are You sure you want to DELETE this Flash Card?");
        if (answer) {
            $.ajax({
                type: "POST",
                data: { CardId: CardId },
                dataType: "json",
                url: '/Admin/DeleteCard/',
                success: function (data) {

                    if (data.delans == true) {
                        var grid = $("#FlashCards").data("kendoGrid");
                        grid.dataSource.read();
                        grid.refresh();
                    }
                    else {
                        alert('Error : ');
                    }
                },
                error: function (data) {
                    alert('Error : ');
                }

            });
        }
    }

    function onChange() {
        var grid = $("#FlashCards").data("kendoGrid");
        var value = this.value();

        if (value) {

            grid.dataSource.filter({ field: "SubjectArea", operator: "eq", value: value });

        } else {

            grid.dataSource.filter();

        }
    }


</script>

<script src="@Url.Content("~/Scripts/kendo/kendo.web.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/kendo/kendo.aspnetmvc.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>

