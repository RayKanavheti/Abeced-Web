@model IEnumerable<Abeced.UI.Models.FlashCardModel>

@{
    ViewBag.Title = "Select Cards";
    //Layout = "~/Views/Shared/_LayoutProfile.cshtml";
    Layout = "~/Views/Shared/_StudDashboardLayout.cshtml";
}
@section MoreCssSection{
<link href="@Url.Content("~/Content/kendo/kendo.common.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/kendo/kendo.default.min.css")" rel="stylesheet" type="text/css" />

   <style type="text/css">

    span.k-Delete {
			background:url('@Url.Content("~/Content/icons/delete.png")') center center;
		}
		.k-grid .k-button-icontext .k-icon {
			margin: 0;
			vertical-align: middle;
		}
		.k-grid tbody .k-button {
			min-width: 16px;
			/*width: 16px*/;
		}

    /*Style build-in commands*/
    .abutton,
    div.k-grid .k-grid-delete,
    div.k-grid .k-grid-cancel,
    div.k-grid .k-grid-update  {
        display:inline-block;
        width:16px;
        height:16px;
        text-align:center;
        text-indent:-444px;
        min-width:0;
        border:0;
    }

    /*Style custom buttons*/
    .abutton.delete {
        background: url('@Url.Content("~/Content/icons/delete.png")');
    }
     table {
    border-collapse:separate;
    border-spacing: 2px;
}
    td, th {
    padding: 2px;
}
    .k-block > .k-header, .k-window-titlebar {
    height: 2.1em;
    }
</style> 
    }
@using Kendo.Mvc.UI
@{int[] pages = { 20, 50, 80 };}

@section HeaderSection {
    <div class="parallax overflow-hidden bg-blue-400 page-section third">
        <div class="container parallax-layer" data-opacity="true">
             <div class="media v-middle">
            <div class="media-left text-center">
                <a href="#">
                    <img src="~/Content/Images/img.jpg" alt="people" class="img-circle width-80" />
                </a>
            </div>
            <div class="media-body">
                <h2 class="text-white text-display-1 margin-v-0" style="font-size:1.35em">Select Study Contents</h2>
                <p class="text-subhead"><a class="link-white text-underline" href="#">Flashcards, Quiz & Facts </a></p>
            </div>
            <div class="media-right">
                <span class="label bg-blue-500">
                    <a class="btn btn-grey-900" href="#"><i class="fa fa-th"></i></a>
                    <a class="btn btn-white" href="#"><i class="fa fa-list"></i></a>
                </span>
            </div>
        </div>
        </div>
    </div>
}

<div class="panel panel-default">
    <div class="media v-middle">
        <div class="media-left">
            <div class="bg-green-400 text-white">
                <div class="panel-body">
                    <i class="fa fa-calendar fa-fw fa-2x"></i>
                </div>
            </div>
        </div>
        <div class="media-body">
            Select your <span class="text-body-2">Flash Cards</span> and proceed
        </div>
        <div class="media-right media-padding">
            <a class="btn btn-white paper-shadow relative" data-z="0.5" data-hover-z="1" data-animated href="#">
                <i class="fa fa-book"></i>
            </a>
        </div>
    </div>
</div>


<div class="row" data-toggle="isotope">
    <div data-role="infinite-scrolling-content" class="clear" style="margin-left: 0px">
        <div class="row-fluid">

            <table align="center" style="width:100%; ">
                <tr>
                    <td>
                        <button type="button" class="k-button" id="btnProcced" style="font-weight: bold; font-size: 12px" title="Click to Continue after Selection" disabled="disabled">

                            <i class="entypo-forward"></i>Click Here to Proceed
                        </button>

                        <button type="button" class="k-button" id="btnGoBack" style="font-weight: bold; font-size: 12px">

                            <i class="entypo-back"></i> Back To Categories
                        </button>

                        @(Html.Kendo().Grid(Model)
    .Name("FlashCards")
    //.Scrollable()
    .HtmlAttributes(new { style = "width:100%;" })
    .Columns(columns =>
    {
        columns.Bound(p => p.CardId).Visible(false);
        columns.Bound(p => p.CardId).ClientTemplate("<input type='checkbox'  value='#= CardId #' class='chkbx' />").Title("Select ..")
            .HeaderTemplate("<label> <input id='masterCheckBox' type='checkbox' onclick='checkAll(this)'  /> Select..<label/>").Sortable(false).Filterable(false);
        //columns.Bound(p => p.CardId).ClientTemplate("<input type='checkbox' #= CardId ? checked='checked': '' # class='chkbx' />").Title("Select ..");
        columns.Bound(p => p.Question);
        columns.Bound(p => p.Answer);
        columns.Bound(p => p.FactSheet).Sortable(false);
        //columns.Bound(p => p.SubjectArea);
        //columns.Bound(p => p);
        //columns.Command(command => command.Custom("Edit").Click("getFlashCard"))
        //    .HtmlAttributes(new { @style = "text-align: left; font-size:12px" }).Width(80);
        //columns.Command(command => command.Custom("Delete").Click("deleteCard"))
        //                                        .HtmlAttributes(new { @style = "text-align: left; font-size:11px", @title = "Delete" }).Width(50);



    })
             .ToolBar(toolbar =>
                        toolbar.Template(Html.Kendo().DropDownList().Name("catid").DataTextField("catname").DataValueField("catid")
                                .Events(e => e.Change("onChange").Filtering("onFiltering"))
                                .Value("" + ViewData["cid"] + "")
                        .OptionLabel("Select Subject Area...")
                        .DataSource(source => source
                        .Read(read => read.Action("GetAllCategory", "Admin", new { id = ViewData["mcat"] }))

                        .ServerFiltering(true)

                        )

                            .HtmlAttributes(new { style = "float:right; width:210px" }).ToHtmlString())
                 )
            .Events(events => events.DataBound("onDataBound"))
        .Pageable(pager => pager
                .PageSizes(pages))
                .Sortable()
        //.Scrollable(scrolling => scrolling.Height(540))
        .Filterable()
            .DataSource(dataSource => dataSource
            .Ajax()
                             //        .Filter(f => {
                             //    if (ViewData["filter"] != null)
                             //    {
                             //        f.Add(model => model.SubjectArea).Equals(ViewData["filter"]);
                             //    }
                             //})
                             .Read(read => read.Action("GetCardListFilter_Read", "Admin", new { id = ViewData["cid"] }))

            .ServerOperation(false)
            .PageSize(20)

        )
                        )
                    </td>

                </tr>
            </table>
        </div>
    </div>
</div>




<div id="getmsgwindow">
</div>
<div id="windowmsg"></div>



@section CourseCategorySection
{

    <div class="panel panel-default" data-toggle="panel-collapse" data-open="true">
        <div class="panel-heading panel-collapse-trigger">
            <h4 class="panel-title">My Account</h4>
        </div>
        <div class="panel-body list-group">
            <ul class="list-group list-group-menu">
                <li class="list-group-item active"><a class="link-text-color" href="@Url.Content("~/App/Dashboard")">Dashboard</a></li>
                <li class="list-group-item"><a class="link-text-color" href="@Url.Content("~/Flash/GetTopics")">My Courses</a></li>
                <li class="list-group-item"><a class="link-text-color" href="#">Profile</a></li>
            </ul>
        </div>
    </div>

    <div class="panel panel-default" data-toggle="panel-collapse" data-open="true">
        <div class="panel-heading panel-collapse-trigger">
            <h4 class="panel-title">Begin Study... </h4>
        </div>
        <div class="panel-body list-group">
            <ul class="list-group list-group-menu">
                <li class="list-group-item">
                    @Html.ActionLink("FlashCard", "GetTopics", "Flash", routeValues: new { type = "Card" }, htmlAttributes: new { @class = "link-text-color" })
                </li>
                <li class="list-group-item">
                    @Html.ActionLink("Quiz", "QuizTopics", "Flash", routeValues: new { type = "Quiz" }, htmlAttributes: new { @class = "link-text-color" })
                </li>
                <li class="list-group-item">
                    @Html.ActionLink("Fact-To-Match", "GetTopics", "Flash", routeValues: new { type = "Fact" }, htmlAttributes: new { @class = "link-text-color" })
                </li>
            </ul>
        </div>
    </div>

    <div class="panel panel-default" data-toggle="panel-collapse" data-open="true">
        <div class="panel-heading panel-collapse-trigger">
            <h4 class="panel-title">Statistics</h4>
        </div>
        <div class="panel-body list-group">
            <ul class="list-group">
                <li class="list-group-item">
                    <span class="badge pull-right">@ViewBag.RevisionCount+</span>
                    <a class="list-group-link" href="#">Pending Revisions(s)</a>
                </li>
                <li class="list-group-item">
                    <span class="badge pull-right r">@ViewBag.PendingSessonCount+</span>
                    <a class="list-group-link" href="#">Uncompleted Session(s)</a>
                </li>
                <li class="list-group-item">
                    <span class="badge pull-right">@ViewBag.MyCardCount+</span>
                    <a class="list-group-link" href="#">Cards Contributed</a>
                </li>
            </ul>
        </div>
    </div>

}

@section  footerscript
{
<script type="text/javascript">
    var checkedIds = {};

    //on click of the checkbox:
    $('#FlashCards').on('click', '.chkbx', function () {
        var checked = this.checked,
            row = $(this).closest("tr"),
            grid = $("#FlashCards").data("kendoGrid"),
            dataItem = grid.dataItem(row);

        if (!checked) {
            $('#masterCheckBox').attr('checked', false); // Unchecks it
        }

        checkedIds[dataItem.CardId] = checked;
        if (checked) {
            //-select the row
            row.addClass("k-state-selected");
        } else {
            //-remove selection
            row.removeClass("k-state-selected");
        }
        console.log(checkedIds);
        if (Object.keys(checkedIds).length == 0)
        {
            $('#btnProcced').attr('disabled', false);
        }
        else
        {
            $('#btnProcced').removeAttr("disabled");
        }
        //console.log(Object.Values(checkedIds).length);
    });

    //on dataBound event restore previous selected rows:
    function onDataBound(e) {
        var view = this.dataSource.view();
        for (var i = 0; i < view.length; i++) {
            if (checkedIds[view[i].CardId]) {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']")
                    .addClass("k-state-selected")
                    .find(".chkbx")
                    .attr("checked", "checked");
            }
        }

        var masterCbChecked = $("#masterCheckBox").is(':checked');
        var grid = $("#FlashCards").data("kendoGrid");

        //if(!masterCbChecked)
        //{
        //    checkedIds = {};
        //}
        if (masterCbChecked) {
            for (var i = 0; i < grid.dataSource.total() ; i++) {
                var dataRow = $("#FlashCards").data("kendoGrid").dataSource.data()[i];
                var elementRow = grid.table.find(".chkbx")[i];
                if (elementRow != null) {
                    var checked = elementRow.checked,
                        row = $(elementRow).closest("tr"),
                        dataItem = grid.dataItem(grid.tbody.find("tr").eq(i));
                    if (masterCbChecked) {
                        checkedIds[dataItem.CardId] = masterCbChecked;
                        //-select the row
                        elementRow.checked = true;
                        row.addClass("k-state-selected");
                        dataRow.IsSelected = true;
                    } else {
                        //-remove selection
                        elementRow.checked = false;
                        row.removeClass("k-state-selected");
                        dataRow.IsSelected = false;
                    }
                }
            }
        }
    }


    function checkAll(ele) {
        var state = $(ele).is(':checked');
        var grid = $("#FlashCards").data("kendoGrid");
        //grid.dataSource.pageSize(grid.dataSource.total());
        //grid.dataSource.read();
        //grid.refresh();

        checkedIds = {};


        for (var i = 0; i < grid.dataSource.total() ; i++) {
            var dataRow = $("#FlashCards").data("kendoGrid").dataSource.data()[i];
            var elementRow = grid.table.find(".chkbx")[i];
            if (elementRow != null) {
                var checked = elementRow.checked,
                    row = $(elementRow).closest("tr"),
                    dataItem = grid.dataItem(grid.tbody.find("tr").eq(i));

                if (state) {
                    checkedIds[dataItem.CardId] = state;
                    //-select the row
                    elementRow.checked = true;
                    row.addClass("k-state-selected");
                    dataRow.IsSelected = true;
                } else {
                    //-remove selection
                    elementRow.checked = false;
                    row.removeClass("k-state-selected");
                    dataRow.IsSelected = false;
                }
            }

            //mark for paging
            if (dataRow != null) {
                if (state) {
                    dataRow.IsSelected = true;
                } else {
                    dataRow.IsSelected = false;
                }
            }

        };

        // set back to 50 page size
        //grid.dataSource.pageSize(50);
        console.log(checkedIds);
    }

    function checkAll3(ele) {
        debugger;
        var state = $(ele).is(':checked');
        var grid = $('#FlashCards').data('kendoGrid');
        if (state == true) {
            $('.chkbx').prop('checked', true);
        }
        else {

            $('.chkbx').prop('checked', false);
        }
    };

    function checkAll2(ele) {
        var state = $(ele).is(':checked');
        var grid = $("#FlashCards").data("kendoGrid");
        $.each(grid.dataSource.view(), function () {
            if (this['CardId'] != state)
                this.dirty = true;
            this['CardId'] = state;
        });
        grid.refresh();
    }

    function getFlashCard(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var cardid = dataItem.CardId;
        $("#windowmsg").append("<div id='getmsgwindow'></div>");

        var wnd2 = $("#getmsgwindow").kendoWindow({
            //actions: ["Close"],
            draggable: true,
            modal: true,
            animation: false,
            resizable: true,
            content: "/Admin/EditCard?cardid=" + cardid,
            width: 720,
            height: 580,

            title: "Flash Card Details",
            // close: onClose,
            deactivate: function () {
                this.destroy();
            }

        }).data("kendoWindow");
        wnd2.center().open();
    }

    $("#btnProcced").click(function (e) {
        e.preventDefault();

        if (checkedIds == null)
        {
            alert("You have not Selected Any Flashcards");
            return;
        }

        var sform = 'Card';
        sform = '@ViewData["type"]';

        var postData = JSON.stringify({ ids: checkedIds });
        //var postData = { ids: checkedIds };
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetData", "Flash")',
            data: postData,
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //console.log(data.res);
                //alert(data.res);
                window.location.href = "/Flash/"+sform+"?cid=@ViewData["cid"]&sub=@ViewData["sub"]&cards="+data.res;
            },
            dataType: "json",
            traditional: true
        });

    });

    $("#btnGoBack").click(function (e) {
        e.preventDefault();
        cid = '@ViewData["mcat"]';
        if (cid == "") {
            cid = '@HttpContext.Current.Request.QueryString["mcat"]';
        }
        window.location.href = "/Flash/GetTopics?cid="+cid;
    });

    function OnSuccessCat(ajaxContext) {
        $('#targetDivMsg').empty();
        var response = ajaxContext.rtnmsg;
        var smsg = ajaxContext.msg;
        if (response == "success") {
            $('<span class="alert alert-success" style="display: block;font-size: 120%"><b>Success : Data Saved Successfully. </b> </span>').appendTo('.rssedMsg');
            $("#btnSubmitCat").hide();
            $("#btnAddAnotherCat").show();
            //var grid = $("#FlashCards").data("kendoGrid");
            //grid.dataSource.read();
            //grid.refresh();

        }
        else if (response == "fail") {
            $('<span class="alert alert-error" style="display: block;font-size: 120%"><b>Error: Unable to Save. Please try Again</b> </span>').appendTo('.rssedMsg');
        }
        else {
            $('<span class="alert alert-error" style="display: block;font-size: 120%"><b>Unknown Error: Please try Again</b> </span>').appendTo('.rssedMsg');
        }
    }
    function OnFailureCat(ajaxContext) {
        $('#targetDivMsg').empty();
        $('#targetDivMsg').empty();
        $('<span class="alert alert-error" style="display: block;font-size: 120%"><b>Error Occurred whiles saving</b> </span>').appendTo('.rssedMsg');
        //$('#targetDivMsg').empty();
    }

    function OnSuccessMsg(ajaxContext) {
        $('#targetDivMsg').empty();
        var response = ajaxContext.rtnmsg;
        var smsg = ajaxContext.msg;
        if (response == "success") {
            $('<span class="alert alert-success" style="display: block;font-size: 120%"><b>Success : Flash Card Saved Successfully. </b> </span>').appendTo('.rssedMsg');
            $("#btnSubmitMsg").hide();
            $("#btnAddAnotherCard").show();
            var grid = $("#FlashCards").data("kendoGrid");
            grid.dataSource.read();
            grid.refresh();

        }
        else if (response == "fail") {
            $('<span class="alert alert-error" style="display: block;font-size: 120%"><b>Error: Unable to Save. Please try Again</b> </span>').appendTo('.rssedMsg');
        }
        else {
            $('<span class="alert alert-error" style="display: block;font-size: 120%"><b>Unknown Error: Please try Again</b> </span>').appendTo('.rssedMsg');
        }
    }
    function OnFailureMsg(ajaxContext) {
        $('#targetDivMsg').empty();
        $('#targetDivMsg').empty();
        $('<span class="alert alert-error" style="display: block;font-size: 120%"><b>Error Occurred whiles saving</b> </span>').appendTo('.rssedMsg');
        //$('#targetDivMsg').empty();
    }
    ////////
    function OnSuccessMsga(ajaxContext) {
        $('#targetDivMsga').empty();
        var response = ajaxContext.rtnmsg;
        if (response == "success") {
            $('<span class="alert alert-success" style="display: block;font-size: 120%"><b>Success : Message Data Saved Successfully. </b> </span>').appendTo('.rssedMsga');
            $("#btnSubmitMsga").hide();
            $("#btnAddAnotherMsga").show();
            var grid = $("#GridMessagesList").data("kendoGrid");
            grid.dataSource.read();
            grid.refresh();
        }
        else if (response == "pkerror") {
            $('#targetDivMsga').empty();
            $('<span class="alert alert-error" style="display: block;font-size: 120%"><b>Unable to Save. Message Code Already Exist. <br> Please Modify the Message Code.</b> </span>').appendTo('.rssedMsga');

        }
        else {
            $('#targetDivMsga').empty();
            $('<span class="alert alert-error" style="display: block;font-size: 120%"><b>Unknown Error: Please try Again</b> </span>').appendTo('.rssedMsga');

        }
    }
    function OnFailureMsga(ajaxContext) {
        $('#targetDivMsga').empty();
        $('<span class="alert alert-error" style="display: block;font-size: 120%"><b>Error: Error Occurred whiles saving</b> </span>').appendTo('.rssedMsga');

    }

    function onDataBound_old(e) {
        //remove text from "destroy" button
        //var innerContent = $(".k-grid-Delete").html().replace("Delete", "");
        //$(".k-grid-Delete").html(innerContent);
        $(".k-grid-Delete").addClass("abutton delete");
    }

    function onChange() {
        var grid = $("#FlashCards").data("kendoGrid");
        var value = this.value();

        if (value) {

            grid.dataSource.filter({ field: "SubjectArea", operator: "eq", value: value });

        } else {

            grid.dataSource.filter();

        }
    }

    function onFiltering() {
        var grid = $("#FlashCards").data("kendoGrid");
        var value = this.value();

        if (value) {

            grid.dataSource.filter({ field: "SubjectArea", operator: "eq", value: value });

        } else {

            grid.dataSource.filter();

        }
    }

    function filterSubArea() {
        return {
            catid: $("#subjectCat").val()
        };
    }

    function filterCatSubArea() {
        return {
            catid: $("#ParentId").val()
        };
    }

    //constraint on media uploads
    var onSelectLimitFile = function (e) {
        var cnt = 0;
        $.each(e.files, function (index, value) {
            var ok = value.extension.toLowerCase() == ".jpg"
                     || value.extension.toLowerCase() == ".jpeg"
                     || value.extension.toLowerCase() == ".png"
                     || value.extension.toLowerCase() == ".mp3"
                     || value.extension.toLowerCase() == ".gif";

            if (!ok) {
                e.preventDefault();
                alert("Please upload image(jpg/png/gif) or audio (mp3) files");
            }

        });
        if (e.files.length > 2) {
            alert("Please select a maximum of 2 files.");
            e.preventDefault();
        }
        else {
            //TODO - fix to validate() number of files.....
            var upfileCount = $(this).parent('.uploadclass'); // e.target.closest(".uploadclass li").length;
            //var upfileCount = $(this).closest(".uploadclass").contents().toArray();
            //var upfileCount = e.target.$(this).parents().find('.uploadclass');
            //var upfileCount = $(".uploadclass");//.find('li').length;
            //console.log(upfileCount);
            //alert(upfileCount);
            if ((e.files.length + upfileCount) > 2) {
                alert("You can not upload more than 4 files");
                e.preventDefault();
            }
        }

    };

    function limitFiles(e) {
        if (e.files.length > 3) {
            alert("Please select max 3 files.");
            e.preventDefault();
        }
        else {
            var existingfileCount = $(".demo-section li").length;
            if ((e.files.length + existingfileCount) > 4) {
                alert("You can not upload more than 4 files");
                e.preventDefault();
            }

        }

        //var files = e.files;
        ////alert(e.files.length);
        //if (e.files.length > 3) {
        //    alert('Only two files may be uploaded, cancelling operation...');
        //    e.preventDefault();
        //}
    };



</script>
<script src="@Url.Content("~/Scripts/kendo/kendo.web.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/kendo/kendo.aspnetmvc.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script> 

}


